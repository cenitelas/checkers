{"version":3,"sources":["logo.svg","LoginForm.js","Check.js","Field.js","WaitBlock.js","Board.js","Time.js","Chat.js","Game.js","GamesList.js","Modal.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","LoginForm","props","state","ChangeUser","login","password","onChangeLogin","bind","onChangePassword","onSubmit","event","this","length","fetch","headers","method","body","JSON","stringify","Name","Password","then","request","json","result","catch","res","console","log","alert","preventDefault","setState","target","value","className","type","name","onChange","React","Component","Check","check","checkType","CheckTypeId","Field","field","click","fieldType","FieldTypeId","light","onClick","key","Id","WaitBlock","message","Board","board","fieldTake","checkDelete","isEnemy","move","isMove","player","setIsMove","FiledClick","FiledLook","e","item","fields","Fields","filter","i","forEach","element","ClearFields","take","slice","indexOf","CheckId","PozY","IsQuein","fieldLU","find","PozX","fieldLD","fieldRU","fieldRD","DiagLeftUp","DiagLeftDown","DiagRightUp","DiagRightDown","VerefyField","lu","ld","ru","rd","diag","SearchEmptyFieldQuein","push","x","y","SearchEmptyField","map","Time","time","newTime","intervalP","setInterval","tt","MoveTime","split","date","Date","newDate","setHours","setMinutes","setSeconds","clearInterval","Chat","id","chat","user","SendMessage","a","rej","Messages","Math","random","Game","game","players","MoveRefresh","SetIsMove","GameId","BoardId","CountPlayers","GameRefresh","BoardRefresh","PlayerId","isFinish","GamesList","games","users","joinGame","UsersRefresh","ViewHost","intervalU","HostId","onDoubleClick","z","GameTypeId","App","modal","isCreateGame","ShowCreateGame","CloseCreateGame","CreateGame","SendNewGame","JoinGame","response","response2","player2","optionsGameType","label","optionsCheckType","defaultValue","options","gameRes","UserId","newPlayer","Victory","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6a8f3c66.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './LoginForm.css';\r\n\r\nclass LoginForm extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {ChangeUser:props.ChangeUser, login: '', password: ''};\r\n\r\n      this.onChangeLogin = this.onChangeLogin.bind(this);\r\n      this.onChangePassword = this.onChangePassword.bind(this);\r\n      this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onSubmit(event){\r\n      if(this.state.login.length>0 && this.state.password.length>0){\r\n        fetch(\"/api/users/postuser\",\r\n        {\r\n            headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json'\r\n            },\r\n            method: \"POST\",\r\n            body: JSON.stringify({Name: this.state.login, Password:this.state.password})\r\n        })\r\n        .then(request => request.json())\r\n        .then(result => {this.state.ChangeUser(result);})\r\n        .catch(function(res){ console.log(res) })\r\n       \r\n      }else{\r\n          alert(\"Поля не могут быть пустыми!\")\r\n      }\r\n      event.preventDefault();\r\n    }\r\n\r\n    onChangePassword(event){\r\n      this.setState({password: event.target.value});\r\n    }\r\n\r\n    onChangeLogin(event) {\r\n      this.setState({login: event.target.value});\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <form onSubmit={this.onSubmit} className=\"login-form\">\r\n          <p><label>Логин : <input type=\"text\" name=\"login\" value={this.state.login}\r\n                           onChange={this.onChangeLogin}/></label></p>\r\n          <p><label> Пароль: <input type=\"password\" name=\"password\" value={this.state.password}\r\n                            onChange={this.onChangePassword}/></label></p>\r\n          <p><input type=\"submit\" value=\"Вход\" /></p>\r\n        </form>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default LoginForm;","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './Check.css';\r\n\r\nclass Check extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            check:props.check\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        var checkType = (this.state.check.CheckTypeId==1)?\"check check_white \":\"check check_black \";\r\n        return (\r\n          <div className={checkType}>\r\n            \r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Check;","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './Field.css';\r\nimport Check from './Check'\r\n\r\nclass Field extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            field:props.field,\r\n            click:props.click\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var fieldType = (this.state.field.FieldTypeId==1)?\"field field_white \":(this.state.field.FieldTypeId==2)?\"field field_black \":\"field field_light \";\r\n        return (\r\n          <div className={fieldType+this.state.light} onClick={()=>this.state.click(this,this.state.field)}>\r\n            {this.state.field.Check &&\r\n                <Check check={this.state.field.Check} key={this.state.field.Check.Id}></Check>\r\n            }\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Field;","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './Game.css';\r\nimport Board from './Board';\r\n\r\nclass WaitBlock extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            message:props.message\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"wait-block\">\r\n            <div className=\"wait-message\">{this.state.message}</div>\r\n             </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WaitBlock;","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './Board.css';\r\nimport Field from './Field';\r\nimport WaitBlock from './WaitBlock';\r\n\r\nclass Board extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            board:props.board,\r\n            fieldTake:null,\r\n            checkDelete:[],\r\n            isEnemy:false,\r\n            move:props.move,\r\n            isMove:props.isMove,\r\n            player:props.player,\r\n            setIsMove:props.setIsMove\r\n        }\r\n      this.FiledClick = this.FiledClick.bind(this);\r\n      this.FiledLook = this.FiledLook.bind(this);\r\n    }\r\n    \r\n    FiledClick(e,item){\r\n        var isMove = this.state.isMove;\r\n        var player = this.state.player;\r\n        if(isMove){\r\n        this.setState({isEnemy:false});\r\n        var field = e.props.field;    \r\n        var fields = this.state.board.Fields;\r\n        if(field.FieldTypeId!==3){\r\n        fields.filter(i=>i.FieldTypeId==3).forEach(element => {\r\n            element.FieldTypeId=2;\r\n        });         \r\n         }\r\n        if(field.Check && player.CheckTypeId==field.Check.CheckTypeId){\r\n            this.setState({fieldTake:field});\r\n            this.setState({checkDelete:[]});\r\n            this.FiledLook(field,field);\r\n        }else{\r\n            if(field.FieldTypeId==3){\r\n                this.ClearFields(field,this.state.fieldTake);\r\n            }\r\n            this.setState({fieldTake:null});\r\n            this.setState({checkDelete:[]});\r\n            fields.filter(i=>i.FieldTypeId==3).forEach(element => {\r\n                element.FieldTypeId=2;\r\n            });         \r\n        }\r\n    }\r\n    }\r\n\r\n    async ClearFields(field,take){\r\n        this.state.setIsMove(false);\r\n        var checkDelete = this.state.checkDelete;\r\n        checkDelete = checkDelete.slice(0, checkDelete.indexOf(field));\r\n        field.Check=take.Check;\r\n        field.CheckId=take.CheckId;\r\n        take.Check=null;\r\n        checkDelete.forEach(element => {     \r\n            if(element.Check)\r\n            element.Check=null;\r\n        });\r\n        if(field.Check.CheckTypeId==1 && field.PozY==7 ){\r\n            field.Check.IsQuein = true;\r\n        }\r\n\r\n        if(field.Check.CheckTypeId==2 && field.PozY==0 ){\r\n            field.Check.IsQuein = true;\r\n        }\r\n\r\n        await fetch(\"/api/board/postboard\",\r\n        {\r\n            headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json'\r\n            },\r\n            method: \"POST\",\r\n            body: JSON.stringify(this.state.board)\r\n        });\r\n\r\n        await fetch(\"/api/move/PostMove\",\r\n        {\r\n            headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json'\r\n            },\r\n            method: \"POST\",\r\n            body: JSON.stringify(this.state.move)\r\n        });\r\n\r\n    }\r\n\r\n    FiledLook(field,take){\r\n        var fields = this.state.board.Fields;\r\n        var fieldLU = fields.find(i=>i.PozX==field.PozX-1 && i.PozY==field.PozY-1);\r\n        var fieldLD = fields.find(i=>i.PozX==field.PozX-1 && i.PozY==field.PozY+1);\r\n        var fieldRU = fields.find(i=>i.PozX==field.PozX+1 && i.PozY==field.PozY-1);\r\n        var fieldRD = fields.find(i=>i.PozX==field.PozX+1 && i.PozY==field.PozY+1);\r\n        if(fieldLU){\r\n            if(fieldLU.Check && fieldLU.Check.CheckTypeId!=take.Check.CheckTypeId && fieldLU.PozX!=0 && fieldLU.PozY!=0){\r\n                 this.DiagLeftUp(fieldLU.PozX,fieldLU.PozY,take);\r\n            }\r\n        }\r\n\r\n        if(fieldLD){\r\n            if(fieldLD.Check && fieldLD.Check.CheckTypeId!=take.Check.CheckTypeId && fieldLD.PozX!=0 && fieldLD.PozY!=7){\r\n                this.DiagLeftDown(fieldLD.PozX,fieldLD.PozY,take);\r\n            }\r\n        }\r\n\r\n        if(fieldRU){\r\n            if(fieldRU.Check && fieldRU.Check.CheckTypeId!=take.Check.CheckTypeId && fieldRU.PozX!=7 && fieldRU.PozY!=0){               \r\n                 this.DiagRightUp(fieldRU.PozX,fieldRU.PozY,take);\r\n            }\r\n        }\r\n\r\n        if(fieldRD){\r\n            if(fieldRD.Check && fieldRD.Check.CheckTypeId!=take.Check.CheckTypeId && fieldRD.PozX!=7 && fieldRD.PozY!=7){            \r\n                this.DiagRightDown(fieldRD.PozX,fieldRD.PozY,take);\r\n            }\r\n         }\r\n\r\n        if(this.VerefyField(fieldLU,fieldLD,fieldRU,fieldRD,take)){\r\n            if(take.Check.CheckTypeId==1){\r\n                if(fieldRD && !fieldRD.Check)fieldRD.FieldTypeId=3;\r\n                if(fieldLD && !fieldLD.Check)fieldLD.FieldTypeId=3;\r\n            }else{\r\n                if(fieldRU && !fieldRU.Check)fieldRU.FieldTypeId=3;\r\n                if(fieldLU && !fieldLU.Check)fieldLU.FieldTypeId=3;\r\n            }\r\n            if(take.Check.IsQuein){\r\n                if(fieldRD && !fieldRD.Check)this.DiagRightDown(fieldRD.PozX,fieldRD.PozY,take);\r\n                if(fieldLD && !fieldLD.Check)this.DiagLeftDown(fieldLD.PozX,fieldLD.PozY,take);\r\n                if(fieldRU && !fieldRU.Check)this.DiagRightUp(fieldRU.PozX,fieldRU.PozY,take);\r\n                if(fieldLU && !fieldLU.Check)this.DiagLeftUp(fieldLU.PozX, fieldLU.PozY, take);\r\n            }\r\n        }\r\n    }\r\n\r\n    VerefyField(lu,ld,ru,rd,take){\r\n        var check = true;\r\n        var fields = this.state.board.Fields;\r\n        if(lu)\r\n        var fieldLU = fields.find(i=>i.PozX==lu.PozX-1 && i.PozY==lu.PozY-1);\r\n        if(ld)\r\n        var fieldLD = fields.find(i=>i.PozX==ld.PozX-1 && i.PozY==ld.PozY+1);\r\n        if(ru)\r\n        var fieldRU = fields.find(i=>i.PozX==ru.PozX+1 && i.PozY==ru.PozY-1);\r\n        if(rd)\r\n        var fieldRD = fields.find(i=>i.PozX==rd.PozX+1 && i.PozY==rd.PozY+1);\r\n\r\n        if(lu && lu.Check && lu.Check.CheckTypeId!=take.Check.CheckTypeId){\r\n            if(fieldLU && !fieldLU.Check ){\r\n                check=false;\r\n            }\r\n        }\r\n\r\n        if(ld && ld.Check && ld.Check.CheckTypeId!=take.Check.CheckTypeId){\r\n            if(fieldLD && !fieldLD.Check ){\r\n                check=false;\r\n            }\r\n        }\r\n\r\n        if(ru && ru.Check && ru.Check.CheckTypeId!=take.Check.CheckTypeId){\r\n            if(fieldRU && !fieldRU.Check ){\r\n                check=false;\r\n            }\r\n        }\r\n\r\n        if(rd && rd.Check && rd.Check.CheckTypeId!=take.Check.CheckTypeId){\r\n            if(fieldRD && !fieldRD.Check ){\r\n                check=false;\r\n            }\r\n        }\r\n\r\n        return check;\r\n    }\r\n\r\n    SearchEmptyField(diag,take){\r\n        if(take.Check.IsQuein){\r\n            this.SearchEmptyFieldQuein(diag,take);\r\n            return;\r\n        }\r\n        var checkDelete = this.state.checkDelete;\r\n      \r\n        if(diag[0].Check && diag.length>1 && diag[1].Check){\r\n            return;\r\n        }\r\n\r\n        for(let i=0;i<diag.length;i++){    \r\n            if(diag[i].Check && diag[i].Check.CheckTypeId==take.Check.CheckTypeId)\r\n                return;   \r\n            if(diag[i].Check && diag.length-1>i && diag[i+1].Check)\r\n                return; \r\n            if(diag[i].Check && i>0 && diag[i-1].Check)\r\n                return; \r\n\r\n            if(diag[i].Check && diag.length-1==i){\r\n                return;\r\n            }      \r\n\r\n            if(!diag[i].Check && diag[i].FieldTypeId!=3){\r\n            diag[i].FieldTypeId=3;\r\n            checkDelete.push(diag[i-1]);\r\n            checkDelete.push(diag[i]);\r\n            this.setState({checkDelete:checkDelete})\r\n            this.DiagLeftUp(diag[i].PozX,diag[i].PozY,take);\r\n            this.DiagLeftDown(diag[i].PozX,diag[i].PozY,take);\r\n            this.DiagRightUp(diag[i].PozX,diag[i].PozY,take);\r\n            this.DiagRightDown(diag[i].PozX,diag[i].PozY,take);\r\n            }\r\n            \r\n            if(!diag[i].Check && diag.length-1>i && !diag[i+1].Check){\r\n                return;\r\n            }   \r\n        }\r\n        \r\n    }\r\n\r\n    SearchEmptyFieldQuein(diag,take){\r\n        var checkDelete = this.state.checkDelete;\r\n        if(diag[0].Check && diag.length<2){\r\n            return;\r\n        }\r\n\r\n        for(let i=0;i<diag.length;i++){\r\n            if(diag[i].Check && diag[i].Check.CheckTypeId===take.Check.CheckTypeId){         \r\n                return;  \r\n            }\r\n            if(diag[i].Check && diag.length-1>i && diag[i+1].Check){\r\n                return;  \r\n            }\r\n            if(diag[i].Check && i>0 && diag[i-1].Check){\r\n                return; \r\n            }\r\n\r\n            if(i<diag.length-1 && diag[i].PozX>take.PozX && diag[i].PozX>diag[i+1].PozX){\r\n                if(!diag[i].Check)\r\n                     return;\r\n                take=diag[i].check;\r\n            }\r\n\r\n            if(i<diag.length-1 && diag[i].PozX<take.PozX && diag[i].PozX<diag[i+1].PozX){\r\n                if(!diag[i].Check)\r\n                     return;\r\n                take=diag[i].check;\r\n            }\r\n\r\n            if(i<diag.length-1 && diag[i].PozY>take.PozY && diag[i].PozY>diag[i+1].PozY){\r\n                if(!diag[i].Check)\r\n                     return;\r\n                take=diag[i].check;\r\n            }\r\n\r\n            if(i<diag.length-1 && diag[i].PozY<take.PozY && diag[i].PozY<diag[i+1].PozY){\r\n                if(!diag[i].Check)\r\n                     return;\r\n                take=diag[i].check;\r\n            }\r\n            checkDelete.push(diag[i]);\r\n            this.setState({checkDelete:checkDelete})\r\n            if(diag[i].FieldTypeId!=3 && !diag[i].Check){\r\n            diag[i].FieldTypeId=3;\r\n            this.DiagLeftUp(diag[i].PozX,diag[i].PozY,take);\r\n            this.DiagLeftDown(diag[i].PozX,diag[i].PozY,take);\r\n            this.DiagRightUp(diag[i].PozX,diag[i].PozY,take);\r\n            this.DiagRightDown(diag[i].PozX,diag[i].PozY,take);\r\n            }\r\n        }\r\n\r\n    }\r\n    \r\n    DiagLeftUp(x,y,take){\r\n        var diag = [];\r\n        var fields = this.state.board.Fields;\r\n        while(x!=-1 && y!=-1){\r\n            diag.push(fields.find(i=>i.PozX==x && i.PozY==y));\r\n            x--;\r\n            y--;\r\n        }\r\n        this.SearchEmptyField(diag,take);\r\n    }\r\n\r\n    DiagLeftDown(x,y,take){\r\n        var diag = [];\r\n        var fields = this.state.board.Fields;\r\n        while(x!=-1 && y!=8){\r\n            diag.push(fields.find(i=>i.PozX==x && i.PozY==y));\r\n            x--;\r\n            y++;\r\n        }\r\n        this.SearchEmptyField(diag,take);\r\n    }\r\n\r\n    DiagRightUp(x,y,take){\r\n        var diag = [];\r\n        var fields = this.state.board.Fields;\r\n        while(x!=8 && y!=-1){\r\n            diag.push(fields.find(i=>i.PozX==x && i.PozY==y));\r\n            x++;\r\n            y--;\r\n        }\r\n        this.SearchEmptyField(diag,take);\r\n    }\r\n\r\n    DiagRightDown(x,y,take){\r\n        var diag = []; \r\n        var fields = this.state.board.Fields;\r\n        while(x!=8 && y!=8){\r\n            diag.push(fields.find(i=>i.PozX==x && i.PozY==y));\r\n            x++;\r\n            y++;\r\n        }\r\n        this.SearchEmptyField(diag,take);\r\n    }\r\n\r\n    render() \r\n    {\r\n        return (\r\n          <div className=\"board\">\r\n              {this.state.board.Fields.map((item, i) => \r\n                <Field field={item} key={item.Id} click={this.FiledClick}></Field>\r\n                )}\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Board;","import React from 'react';\r\n\r\nclass Time extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            time:props.time,\r\n            newTime:0\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.intervalP = setInterval(() =>{\r\n            var tt = this.state.time;\r\n            if(tt && tt.MoveTime){\r\n            var time = tt.MoveTime.split(\"T\")[1].split(\".\")[0].split(\":\");\r\n            var date = new Date();\r\n            var newDate = new Date();\r\n            newDate.setHours(time[0]);\r\n            newDate.setMinutes(time[1]);\r\n            newDate.setSeconds(time[2]);\r\n            this.setState({newTime:(newDate-date)/1000});\r\n            }         \r\n        }, 1000);\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        clearInterval(this.intervalP);\r\n    }\r\n    render() {\r\n        return (\r\n          this.state.newTime\r\n        )\r\n    }\r\n}\r\n\r\nexport default Time;","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './Chat.css';\r\n\r\nclass Chat extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id:props.id,\r\n            chat:{},\r\n            message:\"\",\r\n            user:props.user\r\n        }\r\n        this.SendMessage = this.SendMessage.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.intervalP = setInterval(async () =>{\r\n            var chat = this.state.chat;\r\n            var res = await fetch('/api/chat/getchat/'+this.state.id);\r\n            var rej = await res.json()\r\n            if(JSON.stringify(rej)!=JSON.stringify(chat) && rej){\r\n                this.setState({chat:rej});\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        clearInterval(this.intervalP);\r\n    }\r\n\r\n    async SendMessage(){\r\n        var chat = this.state.chat;\r\n        var message = this.state.message;\r\n        var user = this.state.user;\r\n        if(message.length>0){\r\n            chat.Id=this.state.Id;\r\n        if(!chat.Messages){\r\n            chat.Messages=[];\r\n        }\r\n        chat.Messages.push(user.Name+\" > \"+this.state.message);\r\n        await fetch(\"/api/chat/postchat\",\r\n        {\r\n            headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json'\r\n            },\r\n            method: \"POST\",\r\n            body: JSON.stringify(chat)\r\n        });\r\n        this.setState({chat:chat});\r\n        this.setState({message:\"\"});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var chat = this.state.chat;\r\n        return (\r\n          <div className=\"chat\">\r\n              <div className=\"messages\">\r\n              {chat && chat.Messages &&\r\n                chat.Messages.map((item)=>\r\n                    <p key={Math.random()*0.001}>{item}</p>\r\n                )\r\n              }\r\n              </div>\r\n              <div className=\"message\">\r\n              <input value={this.state.message} onChange={(e)=>this.setState({message:e.target.value})}></input>\r\n              <button onClick={this.SendMessage}>Отправить</button>\r\n              </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Chat;","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './Game.css';\r\nimport Board from './Board';\r\nimport WaitBlock from './WaitBlock';\r\nimport Time from './Time';\r\nimport Chat from './Chat';\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            player:props.player,\r\n            game:props.game,\r\n            players:[],\r\n            move:{},\r\n            user:props.user,\r\n            isMove:false\r\n        }\r\n        this.MoveRefresh = this.MoveRefresh.bind(this);\r\n        this.SetIsMove = this.SetIsMove.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        var game = this.state.game;\r\n        var player = this.state.player;\r\n\r\n        fetch(\"/api/player/GetPlayersGame/\"+player.GameId)\r\n        .then(request => request.json())\r\n        .then(result => this.setState({players:result}))\r\n        .catch(function(res){ console.log(res) });\r\n\r\n        fetch(\"/api/board/getboard/\"+player.Game.BoardId)\r\n        .then(request => request.json())\r\n        .then(result => {game.Board=result; this.setState({game:game})})\r\n        .catch(function(res){ console.log(res) });\r\n\r\n        this.intervalP = setInterval(async () =>{\r\n            if(game.CountPlayers===2){\r\n            var res = await fetch('/api/move/getmove/'+player.GameId);\r\n            var rej = await res.json()\r\n            this.MoveRefresh(rej); \r\n            }\r\n            var res = await fetch('/api/game/getgame/'+player.GameId);\r\n            var rej = await res.json()\r\n            this.GameRefresh(rej); \r\n        }, 100);\r\n    }\r\n\r\n    async MoveRefresh(result){\r\n        var move = this.state.move;\r\n        var game = this.state.game;\r\n    if(JSON.stringify(move)!=JSON.stringify(result) ){\r\n     this.setState({move:result});\r\n     var res = await fetch('/api/board/getboard/'+game.BoardId);\r\n     var rej = await res.json();\r\n     this.BoardRefresh(rej);\r\n     move = this.state.move;\r\n    var player = this.state.player;\r\n       if(player.Id==move.PlayerId)\r\n           this.setState({isMove:true});\r\n       else \r\n           this.setState({isMove:false});\r\n    }\r\n    }\r\n\r\n    BoardRefresh(result){\r\n        var game = this.state.game;\r\n        if(JSON.stringify(game.Board)!=JSON.stringify(result)){\r\n            game.Board=result;\r\n            this.setState({game:game});\r\n        }\r\n    }\r\n\r\n    GameRefresh(result){\r\n        var game = this.state.game;\r\n        if(game.isFinish!=result.isFinish){    \r\n            this.setState({game:result});\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.intervalP);\r\n\r\n    }\r\n\r\n    SetIsMove(move){\r\n        this.setState({isMove:move});\r\n    }\r\n\r\n    render() {\r\n        var players = this.state.players;\r\n        var player = this.state.player;\r\n        var move = this.state.move;\r\n        return (\r\n          <div className=\"game\">\r\n              <span><Time key={move.MoveTime} time={move}></Time></span>\r\n              {this.state.game.CountPlayers!=2 &&\r\n                 <WaitBlock key={player.Id} message={\"Ожидание соперника\"}></WaitBlock>            \r\n              }\r\n              {!this.state.isMove &&\r\n                 <WaitBlock key={move.MoveTime} message={<div><h5>Ожидание противника</h5><h1><Time time={move}></Time></h1></div>}></WaitBlock>            \r\n              }\r\n            {this.state.game.isFinish &&\r\n                 <WaitBlock key={this.state.move.MoveTime} message={\"Игра окончена!\"}></WaitBlock>            \r\n              }\r\n              <div>{(player.CheckTypeId==1)?\"Ваши белые\":\"Ваши черные\"}</div>\r\n              <Chat key={player.GameId} id={player.GameId} user={this.state.user}></Chat>\r\n              {this.state.game.Board && this.state.game.Board.Fields &&\r\n                 <Board key={Math.random()*0.001} board={this.state.game.Board} setIsMove={this.SetIsMove} player={this.state.player} isMove={this.state.isMove} move={this.state.move}></Board>\r\n              }              \r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Game;","import React from 'react';\r\nimport './GamesList.css';\r\nimport { async } from 'q';\r\n\r\nclass GamesList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            games:[],\r\n            users:[],\r\n            joinGame:props.joinGame\r\n        }\r\n        this.UsersRefresh = this.UsersRefresh.bind(this);\r\n        this.GameRefresh = this.GameRefresh.bind(this);\r\n        this.ViewHost = this.ViewHost.bind(this);\r\n    }\r\n    componentDidMount(){\r\n    this.intervalU = setInterval(async () =>{\r\n       var res = await fetch('/api/users/getusers');\r\n       var rej = await res.json();\r\n       this.UsersRefresh(rej);   \r\n        var res = await fetch('/api/game/getgames');\r\n        var rej = await res.json();\r\n        this.GameRefresh(rej); \r\n      }, 100);\r\n    }\r\n\r\n    GameRefresh(games){\r\n        if(JSON.stringify(this.state.games) !== JSON.stringify(games)){           \r\n            this.setState({games:games});\r\n        }\r\n    }\r\n\r\n    UsersRefresh(users){\r\n        if(JSON.stringify(this.state.users) !== JSON.stringify(users)){\r\n            this.setState({users:users});\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.intervalU);\r\n    }\r\n\r\n   async ViewHost(i){\r\n    const  result = await  fetch(\"/api/player/GetPlayerUser/\"+i.HostId);\r\n    const  player = await result.json();\r\n\r\n    return player.CheckTypeId;\r\n   }\r\n    render() {\r\n        var games = this.state.games;\r\n        var users = this.state.users;\r\n        return (\r\n          <div className=\"game-list\">\r\n              <div className=\"header-game-list\">\r\n                  <span>Игрок</span>\r\n                  <span>Тип игры</span>\r\n                  <span>Цвет</span>\r\n              </div>\r\n              {games.map(i=>\r\n               <div key={i.Id} className=\"line\" onDoubleClick={()=>this.state.joinGame(i)}>\r\n               <span>{users.find(z=>z.Id==i.HostId).Name}</span>\r\n               <span>{(i.GameTypeId==1)?\"Русские шашки\":\"Поддавки\"}</span>\r\n               <span>{(this.ViewHost(i)==1)?\"Белые\":\"Черные\"}</span>\r\n               </div>\r\n              )}\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GamesList;","import React from 'react';\r\nimport './Modal.css';\r\n\r\n\r\nclass Modal extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n          message:props.message\r\n      }\r\n    }\r\n    render() {\r\n        var message = this.state.message;\r\n        return (\r\n         message && (\r\n             <div className=\"modal\">\r\n                 <div className=\"modal-border\">\r\n                     {this.state.message}\r\n                 </div>\r\n             </div>\r\n         )\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal;\r\n","import React,{ Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport LoginForm from './LoginForm';\r\nimport Game from './Game';\r\nimport GamesList from './GamesList';\r\nimport Modal from './Modal';\r\nimport Select from 'react-select';\r\nimport './Modal.css';\r\nimport Chat from './Chat';\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n          user:{},\r\n          player:{CheckTypeId:1},\r\n          modal:null,\r\n          game:{GameTypeId:1, CheckTypeId:1},\r\n          isCreateGame:false\r\n      }\r\n      this.ChangeUser = this.ChangeUser.bind(this);\r\n      this.ShowCreateGame = this.ShowCreateGame.bind(this);\r\n      this.CloseCreateGame = this.CloseCreateGame.bind(this);\r\n      this.CreateGame = this.CreateGame.bind(this);\r\n      this.SendNewGame = this.SendNewGame.bind(this);\r\n      this.JoinGame = this.JoinGame.bind(this);\r\n    }\r\n\r\n    async ChangeUser(user){\r\n      var  response =  await fetch(\"/api/player/GetPlayerUser/\"+user.Id);\r\n      var  player =  await response.json();\r\n      this.setState({user:user});;\r\n      if(player){\r\n      var response2 =  await fetch(\"/api/player/getplayer/\"+player.Id);\r\n      var player2 =  await response2.json();  \r\n      this.setState({player:player2});\r\n      }\r\n    }\r\n\r\n    ShowCreateGame(){\r\n      this.setState({isCreateGame:true});\r\n    }\r\n\r\n    CloseCreateGame(){\r\n      this.setState({isCreateGame:false});\r\n    }\r\n\r\n    CreateGame(){\r\n     var optionsGameType = [\r\n      { value: 1, label: 'Русские шашки' }\r\n    ]\r\n    var optionsCheckType = [\r\n      { value: 1, label: 'Белые' },\r\n      { value: 2, label: 'Черные' }\r\n    ]\r\n    var game = this.state.game;\r\n    return(\r\n        <div className=\"create-game\">\r\n          <label>Тип игры</label>\r\n          <Select defaultValue={optionsGameType.find(i=>i.value==game.GameTypeId)} value={optionsGameType.find(i=>i.value==game.GameTypeId)} options={optionsGameType} onChange={(e)=>{game.GameTypeId=e.value; this.setState({game:game})}}/>\r\n          <label>Цвет шашек</label>\r\n          <Select defaultValue={optionsCheckType.find(i=>i.value==game.CheckTypeId)} value={optionsCheckType.find(i=>i.value==game.CheckTypeId)} options={optionsCheckType} onChange={(e)=>{game.CheckTypeId=e.value; this.setState({game:game})}}/>\r\n          <button onClick={this.SendNewGame}>Create</button>\r\n        </div>\r\n    )\r\n    }\r\n\r\n    async SendNewGame(){\r\n        var game = this.state.game;\r\n        var player = this.state.player;\r\n        game.CountPlayers=1;\r\n        game.HostId=this.state.user.Id;\r\n        game.isFinish=false;\r\n        var gameRes = await fetch(\"/api/game/postgame\",\r\n        {\r\n            headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json'\r\n            },\r\n            method: \"POST\",\r\n            body: JSON.stringify(game)\r\n        });\r\n        game = await gameRes.json();\r\n        const  response = await fetch(\"/api/player/GetPlayerUser/\"+this.state.user.Id);\r\n        player = await response.json();\r\n        player.GameId=game.Id;\r\n        player.Game=game;\r\n        this.setState({player:player});\r\n        this.setState({game:game});\r\n      this.setState({isCreateGame:false});\r\n    }\r\n\r\n    async JoinGame(i){\r\n      var player = {};\r\n      player.UserId = this.state.user.Id;\r\n      player.GameId=i.Id;\r\n      player.Game = i;\r\n      if(i){\r\n      var res = await fetch(\"/api/player/postplayer\",\r\n      {\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n          },\r\n          method: \"POST\",\r\n          body: JSON.stringify(player)\r\n      });\r\n      var newPlayer = await res.json();\r\n      player.CheckTypeId = newPlayer.CheckTypeId;\r\n      player.Id=newPlayer.Id;\r\n      this.setState({player:player});\r\n    }\r\n    }\r\n\r\n    render() {\r\n      var player = this.state.player;\r\n      var user = this.state.user;\r\n      if(player && player.Game)\r\n        return <Game key={player.GameId} game={player.Game} player={player} user={user}></Game>\r\n      else\r\n        return (\r\n          <div className=\"app\">\r\n            {this.state.isCreateGame && \r\n              <div className=\"modal\">\r\n              <div className=\"modal-border\">\r\n                  {this.CreateGame()}\r\n              </div>\r\n          </div>\r\n            }\r\n            {!this.state.user.Id &&\r\n              <LoginForm ChangeUser={this.ChangeUser}></LoginForm>\r\n            }\r\n            {this.state.user.Id &&\r\n                <content>\r\n                  <div className=\"header\">\r\n                    <h2>Ваше имя: {user.Name}</h2>\r\n                    <h2>Количество побед: {user.Victory}</h2>\r\n                    <h2 className=\"create-game\" onClick={this.ShowCreateGame}>Создать игру</h2>\r\n                  </div>\r\n                   <Chat key=\"1\" id={0} user={this.state.user}></Chat>\r\n                   <GamesList key=\"2\" joinGame={this.JoinGame}></GamesList>\r\n                </content>  \r\n              }          \r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App key=\"1\" />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}